/*
 * WARNING: this is an autogenerated file and will be overwritten by
 * the extension interface script.
 */
/*
 * This file contains the automatically generated loader-side
 * functions that form part of the extension.
 *
 * This file is awlays compiled into all loaders but compiles
 * to nothing if this extension is not enabled in the loader
 * at build time.
 */
#include "IwDebug.h"
#include "gpgadmob_autodefs.h"
#include "s3eEdk.h"
#include "gpgadmob.h"
//Declarations of Init and Term functions
extern s3eResult gpgadmobInit();
extern void gpgadmobTerminate();


// On platforms that use a seperate UI/OS thread we can autowrap functions
// here.   Note that we can't use the S3E_USE_OS_THREAD define since this
// code is oftern build standalone, outside the main loader build.
#if defined I3D_OS_IPHONE || defined I3D_OS_OSX || defined I3D_OS_LINUX || defined I3D_OS_WINDOWS

static s3eResult AdmobInit_wrap(const char* adUnitId, int adType, int x, int y)
{
    IwTrace(GPGADMOB_VERBOSE, ("calling gpgadmob func on main thread: AdmobInit"));
    return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)AdmobInit, 4, adUnitId, adType, x, y);
}

static s3eResult AdmobTestDevice_wrap(const char* szTestDeviceID)
{
    IwTrace(GPGADMOB_VERBOSE, ("calling gpgadmob func on main thread: AdmobTestDevice"));
    return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)AdmobTestDevice, 1, szTestDeviceID);
}

static s3eResult AdmobResize_wrap(int ad_type)
{
    IwTrace(GPGADMOB_VERBOSE, ("calling gpgadmob func on main thread: AdmobResize"));
    return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)AdmobResize, 1, ad_type);
}

static s3eResult AdmobShow_wrap()
{
    IwTrace(GPGADMOB_VERBOSE, ("calling gpgadmob func on main thread: AdmobShow"));
    return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)AdmobShow, 0);
}

static s3eResult AdmobRefresh_wrap()
{
    IwTrace(GPGADMOB_VERBOSE, ("calling gpgadmob func on main thread: AdmobRefresh"));
    return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)AdmobRefresh, 0);
}

static s3eResult AdmobHide_wrap()
{
    IwTrace(GPGADMOB_VERBOSE, ("calling gpgadmob func on main thread: AdmobHide"));
    return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)AdmobHide, 0);
}

static s3eResult AdmobMove_wrap(int orientation, int x, int y)
{
    IwTrace(GPGADMOB_VERBOSE, ("calling gpgadmob func on main thread: AdmobMove"));
    return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)AdmobMove, 3, orientation, x, y);
}

static s3eResult AdmobInterestialPreload_wrap(const char * adUnitId)
{
    IwTrace(GPGADMOB_VERBOSE, ("calling gpgadmob func on main thread: AdmobInterestialPreload"));
    return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)AdmobInterestialPreload, 1, adUnitId);
}

static bool AdmobInterestialIsReady_wrap()
{
    IwTrace(GPGADMOB_VERBOSE, ("calling gpgadmob func on main thread: AdmobInterestialIsReady"));
    return (bool)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)AdmobInterestialIsReady, 0);
}

static bool AdmobInterestialIsShown_wrap()
{
    IwTrace(GPGADMOB_VERBOSE, ("calling gpgadmob func on main thread: AdmobInterestialIsShown"));
    return (bool)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)AdmobInterestialIsShown, 0);
}

static bool AdmobInterestialWasShown_wrap()
{
    IwTrace(GPGADMOB_VERBOSE, ("calling gpgadmob func on main thread: AdmobInterestialWasShown"));
    return (bool)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)AdmobInterestialWasShown, 0);
}

static bool AdmobInterestialHasBeenUsed_wrap()
{
    IwTrace(GPGADMOB_VERBOSE, ("calling gpgadmob func on main thread: AdmobInterestialHasBeenUsed"));
    return (bool)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)AdmobInterestialHasBeenUsed, 0);
}

static s3eResult AdmobInterestialShow_wrap()
{
    IwTrace(GPGADMOB_VERBOSE, ("calling gpgadmob func on main thread: AdmobInterestialShow"));
    return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)AdmobInterestialShow, 0);
}

static s3eResult AdmobInterestialHide_wrap()
{
    IwTrace(GPGADMOB_VERBOSE, ("calling gpgadmob func on main thread: AdmobInterestialHide"));
    return (s3eResult)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)AdmobInterestialHide, 0);
}

static bool AdmobBannerIsClicked_wrap()
{
    IwTrace(GPGADMOB_VERBOSE, ("calling gpgadmob func on main thread: AdmobBannerIsClicked"));
    return (bool)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)AdmobBannerIsClicked, 0);
}

static bool AdmobInterestialIsClicked_wrap()
{
    IwTrace(GPGADMOB_VERBOSE, ("calling gpgadmob func on main thread: AdmobInterestialIsClicked"));
    return (bool)(intptr_t)s3eEdkThreadRunOnOS((s3eEdkThreadFunc)AdmobInterestialIsClicked, 0);
}

#define AdmobInit AdmobInit_wrap
#define AdmobTestDevice AdmobTestDevice_wrap
#define AdmobResize AdmobResize_wrap
#define AdmobShow AdmobShow_wrap
#define AdmobRefresh AdmobRefresh_wrap
#define AdmobHide AdmobHide_wrap
#define AdmobMove AdmobMove_wrap
#define AdmobInterestialPreload AdmobInterestialPreload_wrap
#define AdmobInterestialIsReady AdmobInterestialIsReady_wrap
#define AdmobInterestialIsShown AdmobInterestialIsShown_wrap
#define AdmobInterestialWasShown AdmobInterestialWasShown_wrap
#define AdmobInterestialHasBeenUsed AdmobInterestialHasBeenUsed_wrap
#define AdmobInterestialShow AdmobInterestialShow_wrap
#define AdmobInterestialHide AdmobInterestialHide_wrap
#define AdmobBannerIsClicked AdmobBannerIsClicked_wrap
#define AdmobInterestialIsClicked AdmobInterestialIsClicked_wrap

#endif

void gpgadmobRegisterExt()
{
    /* fill in the function pointer struct for this extension */
    void* funcPtrs[16];
    funcPtrs[0] = (void*)AdmobInit;
    funcPtrs[1] = (void*)AdmobTestDevice;
    funcPtrs[2] = (void*)AdmobResize;
    funcPtrs[3] = (void*)AdmobShow;
    funcPtrs[4] = (void*)AdmobRefresh;
    funcPtrs[5] = (void*)AdmobHide;
    funcPtrs[6] = (void*)AdmobMove;
    funcPtrs[7] = (void*)AdmobInterestialPreload;
    funcPtrs[8] = (void*)AdmobInterestialIsReady;
    funcPtrs[9] = (void*)AdmobInterestialIsShown;
    funcPtrs[10] = (void*)AdmobInterestialWasShown;
    funcPtrs[11] = (void*)AdmobInterestialHasBeenUsed;
    funcPtrs[12] = (void*)AdmobInterestialShow;
    funcPtrs[13] = (void*)AdmobInterestialHide;
    funcPtrs[14] = (void*)AdmobBannerIsClicked;
    funcPtrs[15] = (void*)AdmobInterestialIsClicked;

    /*
     * Flags that specify the extension's use of locking and stackswitching
     */
    int flags[16] = { 0 };

    /*
     * Register the extension
     */
s3eEdkRegister("gpgadmob", funcPtrs, sizeof(funcPtrs), flags, gpgadmobInit, gpgadmobTerminate, 0);
}

#if !defined S3E_BUILD_S3ELOADER

#if defined S3E_EDK_USE_STATIC_INIT_ARRAY
int gpgadmobStaticInit()
{
    void** p = g_StaticInitArray;
    void* end = p + g_StaticArrayLen;
    while (*p) p++;
    if (p < end)
        *p = (void*)&gpgadmobRegisterExt;
    return 0;
}

int g_gpgadmobVal = gpgadmobStaticInit();

#elif defined S3E_EDK_USE_DLLS
S3E_EXTERN_C S3E_DLL_EXPORT void RegisterExt()
{
    gpgadmobRegisterExt();
}
#endif

#endif
