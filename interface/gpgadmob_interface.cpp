/*
 * WARNING: this is an autogenerated file and will be overwritten by
 * the extension interface script.
 */

#include "s3eExt.h"
#include "IwDebug.h"
#include "s3eDevice.h"


#include "gpgadmob.h"


#ifndef S3E_EXT_SKIP_LOADER_CALL_LOCK
// For MIPs (and WP8) platform we do not have asm code for stack switching
// implemented. So we make LoaderCallStart call manually to set GlobalLock
#if defined __mips || defined S3E_ANDROID_X86 || (defined(WINAPI_FAMILY) && (WINAPI_FAMILY == WINAPI_FAMILY_PHONE_APP))
#define LOADER_CALL_LOCK
#endif
#endif

/**
 * Definitions for functions types passed to/from s3eExt interface
 */
typedef  s3eResult(*AdmobInit_t)(const char* adUnitId, int adType, int x, int y);
typedef  s3eResult(*AdmobTestDevice_t)(const char* szTestDeviceID);
typedef  s3eResult(*AdmobResize_t)(int ad_type);
typedef  s3eResult(*AdmobShow_t)();
typedef  s3eResult(*AdmobRefresh_t)();
typedef  s3eResult(*AdmobHide_t)();
typedef  s3eResult(*AdmobMove_t)(int orientation, int x, int y);
typedef  s3eResult(*AdmobInterestialPreload_t)(const char * adUnitId);
typedef       bool(*AdmobInterestialIsReady_t)();
typedef       bool(*AdmobInterestialIsShown_t)();
typedef       bool(*AdmobInterestialWasShown_t)();
typedef       bool(*AdmobInterestialHasBeenUsed_t)();
typedef  s3eResult(*AdmobInterestialShow_t)();
typedef  s3eResult(*AdmobInterestialHide_t)();
typedef       bool(*AdmobBannerIsClicked_t)();
typedef       bool(*AdmobInterestialIsClicked_t)();

/**
 * struct that gets filled in by gpgadmobRegister
 */
typedef struct gpgadmobFuncs
{
    AdmobInit_t m_AdmobInit;
    AdmobTestDevice_t m_AdmobTestDevice;
    AdmobResize_t m_AdmobResize;
    AdmobShow_t m_AdmobShow;
    AdmobRefresh_t m_AdmobRefresh;
    AdmobHide_t m_AdmobHide;
    AdmobMove_t m_AdmobMove;
    AdmobInterestialPreload_t m_AdmobInterestialPreload;
    AdmobInterestialIsReady_t m_AdmobInterestialIsReady;
    AdmobInterestialIsShown_t m_AdmobInterestialIsShown;
    AdmobInterestialWasShown_t m_AdmobInterestialWasShown;
    AdmobInterestialHasBeenUsed_t m_AdmobInterestialHasBeenUsed;
    AdmobInterestialShow_t m_AdmobInterestialShow;
    AdmobInterestialHide_t m_AdmobInterestialHide;
    AdmobBannerIsClicked_t m_AdmobBannerIsClicked;
    AdmobInterestialIsClicked_t m_AdmobInterestialIsClicked;
} gpgadmobFuncs;

static gpgadmobFuncs g_Ext;
static bool g_GotExt = false;
static bool g_TriedExt = false;
static bool g_TriedNoMsgExt = false;

static bool _extLoad()
{
    if (!g_GotExt && !g_TriedExt)
    {
        s3eResult res = s3eExtGetHash(0x2f01dae6, &g_Ext, sizeof(g_Ext));
        if (res == S3E_RESULT_SUCCESS)
            g_GotExt = true;
        else
            s3eDebugAssertShow(S3E_MESSAGE_CONTINUE_STOP_IGNORE,                 "error loading extension: gpgadmob");

        g_TriedExt = true;
        g_TriedNoMsgExt = true;
    }

    return g_GotExt;
}

static bool _extLoadNoMsg()
{
    if (!g_GotExt && !g_TriedNoMsgExt)
    {
        s3eResult res = s3eExtGetHash(0x2f01dae6, &g_Ext, sizeof(g_Ext));
        if (res == S3E_RESULT_SUCCESS)
            g_GotExt = true;
        g_TriedNoMsgExt = true;
        if (g_TriedExt)
            g_TriedExt = true;
    }

    return g_GotExt;
}

s3eBool gpgadmobAvailable()
{
    _extLoadNoMsg();
    return g_GotExt ? S3E_TRUE : S3E_FALSE;
}

s3eResult AdmobInit(const char* adUnitId, int adType, int x, int y)
{
    IwTrace(GPGADMOB_VERBOSE, ("calling gpgadmob[0] func: AdmobInit"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    s3eResult ret = g_Ext.m_AdmobInit(adUnitId, adType, x, y);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}

s3eResult AdmobTestDevice(const char* szTestDeviceID)
{
    IwTrace(GPGADMOB_VERBOSE, ("calling gpgadmob[1] func: AdmobTestDevice"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    s3eResult ret = g_Ext.m_AdmobTestDevice(szTestDeviceID);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}

s3eResult AdmobResize(int ad_type)
{
    IwTrace(GPGADMOB_VERBOSE, ("calling gpgadmob[2] func: AdmobResize"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    s3eResult ret = g_Ext.m_AdmobResize(ad_type);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}

s3eResult AdmobShow()
{
    IwTrace(GPGADMOB_VERBOSE, ("calling gpgadmob[3] func: AdmobShow"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    s3eResult ret = g_Ext.m_AdmobShow();

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}

s3eResult AdmobRefresh()
{
    IwTrace(GPGADMOB_VERBOSE, ("calling gpgadmob[4] func: AdmobRefresh"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    s3eResult ret = g_Ext.m_AdmobRefresh();

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}

s3eResult AdmobHide()
{
    IwTrace(GPGADMOB_VERBOSE, ("calling gpgadmob[5] func: AdmobHide"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    s3eResult ret = g_Ext.m_AdmobHide();

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}

s3eResult AdmobMove(int orientation, int x, int y)
{
    IwTrace(GPGADMOB_VERBOSE, ("calling gpgadmob[6] func: AdmobMove"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    s3eResult ret = g_Ext.m_AdmobMove(orientation, x, y);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}

s3eResult AdmobInterestialPreload(const char * adUnitId)
{
    IwTrace(GPGADMOB_VERBOSE, ("calling gpgadmob[7] func: AdmobInterestialPreload"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    s3eResult ret = g_Ext.m_AdmobInterestialPreload(adUnitId);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}

bool AdmobInterestialIsReady()
{
    IwTrace(GPGADMOB_VERBOSE, ("calling gpgadmob[8] func: AdmobInterestialIsReady"));

    if (!_extLoad())
        return false;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    bool ret = g_Ext.m_AdmobInterestialIsReady();

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}

bool AdmobInterestialIsShown()
{
    IwTrace(GPGADMOB_VERBOSE, ("calling gpgadmob[9] func: AdmobInterestialIsShown"));

    if (!_extLoad())
        return false;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    bool ret = g_Ext.m_AdmobInterestialIsShown();

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}

bool AdmobInterestialWasShown()
{
    IwTrace(GPGADMOB_VERBOSE, ("calling gpgadmob[10] func: AdmobInterestialWasShown"));

    if (!_extLoad())
        return false;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    bool ret = g_Ext.m_AdmobInterestialWasShown();

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}

bool AdmobInterestialHasBeenUsed()
{
    IwTrace(GPGADMOB_VERBOSE, ("calling gpgadmob[11] func: AdmobInterestialHasBeenUsed"));

    if (!_extLoad())
        return false;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    bool ret = g_Ext.m_AdmobInterestialHasBeenUsed();

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}

s3eResult AdmobInterestialShow()
{
    IwTrace(GPGADMOB_VERBOSE, ("calling gpgadmob[12] func: AdmobInterestialShow"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    s3eResult ret = g_Ext.m_AdmobInterestialShow();

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}

s3eResult AdmobInterestialHide()
{
    IwTrace(GPGADMOB_VERBOSE, ("calling gpgadmob[13] func: AdmobInterestialHide"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    s3eResult ret = g_Ext.m_AdmobInterestialHide();

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}

bool AdmobBannerIsClicked()
{
    IwTrace(GPGADMOB_VERBOSE, ("calling gpgadmob[14] func: AdmobBannerIsClicked"));

    if (!_extLoad())
        return false;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    bool ret = g_Ext.m_AdmobBannerIsClicked();

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}

bool AdmobInterestialIsClicked()
{
    IwTrace(GPGADMOB_VERBOSE, ("calling gpgadmob[15] func: AdmobInterestialIsClicked"));

    if (!_extLoad())
        return false;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    bool ret = g_Ext.m_AdmobInterestialIsClicked();

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}
